@page "/authentication/resetpassword/{idusuario:int}"
@layout AlternativeMainLayout

@inject UsuariosService UsuariosService
@inject NavigationManager Navigation
@inject NotificationService NotificationService
@inject RadzenCustom RadzenCustom

<RadzenCard class="rz-my-12 rz-mx-auto" Style="max-width: 40rem">
    <RadzenText TagName="TagName.H3" TextStyle="TextStyle.H3" TextAlign="TextAlign.Center" Text="Cambiar contraseña" class="rz-my-5" />
    <EditForm Model="loginUserResetPassword" OnValidSubmit="Submit" autocomplete="off">
        <DataAnnotationsValidator />
        <CustomValidation @ref="customValidation" />

        <RadzenStack Orientation="Orientation.Vertical" Gap="5px" Style="height: 4rem; margin-top: 20px;">
            <RadzenLabel Text="Nueva contraseña:" Component="password" />
            <RadzenPassword @bind-Value=@loginUserResetPassword.NewPassword Placeholder="Ingrese su nueva contraseña" Name="password"
                            AutoCompleteType="AutoCompleteType.Off" autofocus />
            <ValidationMessage For="@(() => loginUserResetPassword.NewPassword)" />
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Vertical" Gap="5px" Style="height: 4rem; margin-top: 20px;">
            <RadzenLabel Text="Confirmar contraseña:" Component="confirmPassword" />
            <RadzenPassword @bind-Value=@loginUserResetPassword.ConfirmPassword Placeholder="Confirme su nueva contraseña" Name="confirmPassword"
                            AutoCompleteType="AutoCompleteType.Off" />
            <ValidationMessage For="@(() => loginUserResetPassword.ConfirmPassword)" />
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Style="margin-top: 30px;">
            <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary" Text="Cambiar contraseña" />
        </RadzenStack>
    </EditForm>
</RadzenCard>

@code {
    [Parameter] public int IdUsuario { get; set; }

    LoginUserResetPassword loginUserResetPassword { get; set; } = new();
    CustomValidation? customValidation;

    protected override void OnInitialized()
    {
        loginUserResetPassword.IdUsuario = IdUsuario;
    }

    private async Task Submit()
    {
        RadzenCustom.OpenBusyWithLoader();
        var response = await UsuariosService.PostResetPassword(loginUserResetPassword);
        RadzenCustom.CloseDialog();

        if (response.Success)
        {
            NotificationService.Notify(NotificationSeverity.Success, "La contraseña se modifico correctamente");
            Navigation.NavigateTo("/authentication/login");
        }
        else
        {
            customValidation!.DisplayErrors(response.Errors!);
        }
    }
}
